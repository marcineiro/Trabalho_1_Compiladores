/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabalho_1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author Murilo Marcineiro
 */
public class NewJFrame extends javax.swing.JFrame {

    String saida = "", entrada = "";
    ArrayList<Identificador> ids = new ArrayList<>();
    int numChar_sem_Esp, numChar_Esp;  //num caracter sem e com espaços
    int numPalavras,numIdentificadores,numLinhas;
    int numerosReais =0;
    int numerosInteiros=0;
    int numeroOperadores=0;
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(30);
        jTextArea1.setRows(5);
        jTextArea1.setTabSize(4);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(30);
        jTextArea2.setRows(20);
        jTextArea2.setTabSize(4);
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setText("Analisar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Importar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(274, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        entrada=jTextArea1.getText().toUpperCase();
        contarCaracteres(true);
        contarCaracteres(false);
        contarIdentificadores();
        contarPalavras();
        indiceId();
        contaNumeros();
        contaOperadores();
        
        jTextArea2.setText("Quantidade de caracteres (incluindo espaços): "+numChar_Esp+"\n");
        jTextArea2.setText(jTextArea2.getText().toString()+"Quantidade de caracteres (sem espaços): "+numChar_sem_Esp+"\n");
        jTextArea2.setText(jTextArea2.getText().toString()+"Quantidade de palavras: "+numPalavras+"\n");
        jTextArea2.setText(jTextArea2.getText().toString()+"Quantiadade de identificadores: "+numIdentificadores+"\n");
        jTextArea2.setText(jTextArea2.getText().toString()+"Quantidade de numeros inteiros: "+numerosInteiros+"\n");
        jTextArea2.setText(jTextArea2.getText().toString()+"Quantidade de numeros reais: "+numerosReais+"\n\n");
        
        jTextArea2.setText(jTextArea2.getText().toString()+"Índice Alfabético: \n");
        
        for(Identificador mostraId: ids){
            jTextArea2.setText(jTextArea2.getText().toString()+ mostraId.getName()+" ("+mostraId.getTimes()+"): ");
            for(int i=0; i<mostraId.line.size();i++){
                jTextArea2.setText(jTextArea2.getText().toString()+mostraId.line.get(i)+"("+mostraId.timesInLine.get(i)+") ");
            }
            jTextArea2.setText(jTextArea2.getText().toString()+"\n");
        }
        
      
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        numChar_Esp=0;
        numChar_sem_Esp=0;
        numPalavras=0;
        numIdentificadores=0;
        numLinhas=0;
        numerosInteiros=0;
        numerosReais=0;
        numeroOperadores=0;
        ids.clear();
        saida="";
        jTextArea2.setText("");
        jTextArea1.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File file = chooser.getSelectedFile();
        try {
            FileInputStream fis = new FileInputStream(file);
            InputStreamReader isr = new InputStreamReader(fis);
            BufferedReader br = new BufferedReader(isr);
            String line;
            while((line=br.readLine())!=null){
                jTextArea1.setText(jTextArea1.getText().toString()+line+"\n");
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
//    contar caracteres
    public String tratarEntrada(boolean enter){
        String nEntrada = entrada.replace("\t","");
        if(enter)
            nEntrada = nEntrada.replace("\n", " ");
        return nEntrada;
    }
    
    public void contarCaracteres(boolean espacos){
        int i;
        String in;
        if(espacos){
            in = tratarEntrada(false);
            numChar_Esp = in.length();
        } else {
            in = tratarEntrada(true);
            for(i=0;i<in.length();i++){
                if(in.charAt(i)!=' ')
                    numChar_sem_Esp++;
            }
        }
    }
//    identificadores
    public void contarIdentificadores(){
        char c;
        String name = "";
        Identificador id;
        int i = 0;
        boolean has;
        while(i<entrada.length()){
            c = entrada.charAt(i);
            has = false;
            while(c==' '&&i<entrada.length()){
                i++;
                c = entrada.charAt(i);
            }
            if((c>='a'&&c<='z')||(c>='A'&&c<='Z')){
                while((c>='a'&&c<='z')||(c>='A'&&c<='Z'||(c>='0'&&c<='9'))){
                    name+=c;
                    i++;
                    if(i<entrada.length()){
                        c = entrada.charAt(i);
                    } else {
                        c = '\n';
                    }
                }
                numIdentificadores++;
                id = new Identificador(name);
                id.setTimes(1);
                if(!ids.isEmpty()){
                    for (Identificador id1 : ids) {
                        if (id1.getName().equals(name)) {
                            has = true;
                            id1.setTimes(id1.getTimes()+1);
                        }
                    }
                    if(!has)
                        ids.add(id);
                } else {
                    ids.add(id);
                }
                name = "";
            }
            if(c=='\n')
                numLinhas++;
            i++;
        }
    }
//    palavras
    public void contarPalavras(){
        char c;
        int i = 0;
        while(i<entrada.length()){
            c = entrada.charAt(i);
            while(c==' '&&i<entrada.length()){
                i++;
                c = entrada.charAt(i);
            }
            while(c!=' '&&c!='\n'){
                i++;
                if(i<entrada.length()){
                    c = entrada.charAt(i);
                } else {
                    c = '\n';
                }
                
            }
            i++;
            numPalavras++;
        }
    }
//    indice
    public ArrayList<String> separarLinhas(){
        ArrayList<String> linhas = new ArrayList<>();
        int last=0;
        String in = tratarEntrada(false);
        for(int i=0;i<in.length();i++){
            if(in.charAt(i)=='\n'){
                linhas.add(in.substring(last, i));
                last = i+1;
            }
        }
        if(last<in.length())
            linhas.add(in.substring(last));
        return linhas;
    }
    
    public void indiceId(){
        int count;
        String a[], a2[], line, name;
        ArrayList<String> lines = separarLinhas();
        ArrayList<Integer> timesA;
        ArrayList<Integer> timesInLine;
        for(int i=0;i<lines.size();i++){
            for(Identificador id1 : ids){
                name = id1.getName();
                line = lines.get(i);
                a = line.split(" ");
                count = 0;
                for(String a1 : a){
                    if(a1.matches("\\w*\\(\\w*|\\w*\\)\\w*")){
                        a2 = a1.split("\\(|\\)");
                        for(String a3 : a2){
                            if(name.equals(a3))
                                count++;
                        }
                    } else {
                        if(name.equals(a1))
                            count++;
                    }
                }
                if(count>0){
                    if(id1.getLine()==null){
                        timesA = new ArrayList<>();
                        timesInLine = new ArrayList<>();
                    } else {
                        timesA = id1.getLine();
                        timesInLine = id1.getTimesInLine();
                    }
                    timesA.add(i);
                    timesInLine.add(count);
                    id1.setLine(timesA);
                    id1.setTimesInLine(timesInLine);
                }

            }
        }
    }
    
    public void contaNumeros(){
        boolean conta=false;
        String numero="";
        String texto = jTextArea1.getText().toString();
        String letra;
        for(int i=0;i<texto.length();i++){
            letra = ""+texto.charAt(i);
            if(letra.matches("[0-9]") || letra.equals(".")){
                numero = numero+letra;
                conta = true;
            }else{
                if(conta){
                    if(numero.matches("[0-9]+")){ 
                        numerosInteiros++;
                        numero="";
                    }else {
                        numerosReais++;
                        numero="";
                    } 
                    conta=false;
                    
                }
                
            }
        }
        if(conta){
            if(numero.matches("[0-9]+")) numerosInteiros++;
            else {numerosReais++;}
        }
    }
    
    public void contaOperadores(){
        String texto = jTextArea1.getText().toString();
        String letra;
        for(int i=0;i<texto.length();i++){
            letra = ""+texto.charAt(i);
            if(letra.equals("+")|| letra.equals("-") || letra.equals("/") || letra.equals("*") || letra.equals(">") || letra.equals("<") || letra.equals("=")){
                numeroOperadores++;
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
